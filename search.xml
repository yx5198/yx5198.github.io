<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[ftp搭建]]></title>
      <url>%2F2017%2F09%2F30%2Fftp%E6%90%AD%E5%BB%BA%2F</url>
      <content type="text"><![CDATA[一。检查Linux中vsftpd的安装情况。 rpm -qa|grep vsftp 二。将系统中的SELinux关闭，然后重新启动电脑 关闭SELinux的方法： 修改/etc/selinux/config文件中的SELINUX=”” 为 disabled ，然后重启。 如果不想重启系统，使用命令setenforce 0 注： setenforce 1 设置SELinux 成为enforcing模式 setenforce 0 设置SELinux 成为permissive模式 在lilo或者grub的启动参数中增加：selinux=0,也可以关闭selinux setsebool ftpd_disable_trans 1 三。建立用户和指定目录 #useradd -d /var/www/html/ls syq #passwd syq 建立用户syq，并指定其ftp目录为ls 修改目录权限 chown –R syq /var/www/html/ls chgrp –R syq /var/www/html/ls 四。修改vsftpd.conf配置文件 将anonymous_enable改为NO，阻止匿名上传 将chroot_list_enable和chroot_list_file的注释去掉，阻止用户访问上级目录 五。在/etc/vsftpd下建立chroot_list文件 建立完成后，在其中添加用户syq只允许访问指定目录。 六。启动或是重启ftp服务。 #service vsftpd restart(start) 启动成功后，就可以访问ftp服务了。 注：配置文件中的解释 anonymous_enable=YES &emsp;&emsp; 开启匿名用户登录 local_enable=YES &emsp;&emsp; 开启本地用户登录 write_enable=YES &emsp;&emsp; 开启写权限以便上传 local_umask=022设置上传后文件为user=rwx, group=, other= 这样，用户上传文件后，是不能删除和修改了。因为用户属于group组。 解决方法是，设置local_umask=002。 最终文件权限是777-文件夹掩码-local_umask掩码 anon_upload_enable=YES &emsp;&emsp; 开启匿名用户上传权限 统一匿名上传用户上传的文件的属性 chown_uploads=YES chown_username=ftp 设定chroot配置，禁止特定用户访问上一级目录 chroot_list_enable=YES chroot_list_file=/etc/vsftpd/chroot_list userlist_enable=YES这个选项如果是YES，那/etc/vsftpd/user_list中的用户将被禁止访问ftp。如果是NO，则只有user_list里面的用户才能访问ftp]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[利用fuel安装openstack]]></title>
      <url>%2F2017%2F09%2F29%2F%E5%88%A9%E7%94%A8fuel%E5%AE%89%E8%A3%85openstack%2F</url>
      <content type="text"><![CDATA[1.fuel是什么 &emsp; &emsp;Fuel 是一个为openstack 端到端”一键部署“设计的工具，其功能含盖自动的PXE方式的操作系统安装，DHCP服务，Orchestration服务 和puppet 配置管理相关服务等，此外还有openstack 关键业务健康检查和log 实时查看等非常好用的服务。 2.fuel架构 &emsp; &emsp;Fuel 主节点：用于提供PXE方式操作系统安装服务由开源软件Cobbler 提供，另外由Mcollective和puppet 分别提供orchestration服务和配置管理服务。Fuel iso 包发部的时候已经一同打包了Centos6.4 和ubuntu 12.04 安装包 3.fuel安装 （1）网络拓扑 &emsp; &emsp;10.20.0.X master节点通过pxe网络部署openstack的专用网络 &emsp; &emsp;172.16.170.x openstack公共网络，给实例提供浮动IP并提供外部网络 &emsp; &emsp;192.168.4.x openstack的内部，管理，存储网络 注意：三个网段分别属于vlan160、vlan170、vlan180，其中所属vlan180的端口，要开启 trunk模式 （2）启动服务器，选择用光盘启动 （3）检查fuel安装是否完成，登录http://10.20.0.x:8000/ 显示如下页面，就表示安装成功 可能存在的问题： 如果web页面不能正常访问，可能是你本机的防火墙把本地的网络拒掉，请先禁用防火墙再试。 如果使用了浏览器http代理，请关闭代理直接访问 （4）安装openstack 环境 &emsp; &emsp; &emsp;首先在Fuel web 上创建一个openstack 环境，名字为”openstack1“，这个环境是可以创多个的，可见fuel可以同时管理多个openstack 环境。这里选择的os 有三种，这里默认选择centos，当然你也可以选择ubuntu 和rhle ，不过rhle 需要手动上传镜像或者提供红帽子官网用户名和密码，fuel 为你自动下载，不过时间比较长，不推荐。 名称随你填写，openstack版本这里我选择默认的centos,ubuntu也可以 部署模式选择多节点，HA环境需要更高的硬件条件，要完整发挥HA的话推荐12个节点，5+3+3+1的组合 选择KVM 选择Neutron GRE 存储是默认，使用ceph要满足部署条件 新建完成后，服务器pxe方式启动，等待master节点发现controller,compute节点 每个节点部署之前都需要配置网络 修改网络地址，并验证网络,网络验证成功后，点击部署 4.openstack架构图 5.openstack各个服务名称对应表 6.openstack控制节点 控制节点服务 控制节点所要启动的服务 httpd tgtd memcached rabbitmq-server openstack-cinder-api openstack-cinder-scheduler openstack-cinder-volume openstack-keystone openstack-glance-api openstack-glance-registry openstack-nova-conductor openstack-nova-scheduler openstack-nova-cert openstack-nova-api mysql 控制节点mysql用户名和密码 /etc/mysql/conf.d/password.cnf mysql配置文件 /etc/my.cnf mysql数据目录 /var/lib/mysql mysql日志文件 /var/log/mysqld.log rabbitmqp配置文件 /etc/rabbitmq/rabbitmq.config rabbitmqp日志文件 /var/log/rabbitmq Keystone配置文件 /etc/keystone/keystone.conf Keystone日志文件 /var/log/keystone/keystone-all.log /var/log/keystone/keystone-manage.log /var/log/keystone/keystone-startup.log memcached配置文件 /etc/sysconfig/memcached memcached日志文件 /var/log/memcached.log apache配置文件 /etc/httpd/conf/httpd.conf /etc/httpd/conf.d/openstack-dashboard.conf apache日志文件 /var/log/httpd/access_log /var/log/httpd/error_log glance配置文件 /etc/glance/glance-api.conf /etc/glance/glance-registry.conf glance日志文件 /var/log/glance/api.log /var/log/glance/registry.log cinder配置文件 /etc/cinder/cinder.conf cinder日志文件 /var/log/cinder/api.log /var/log/cinder/scheduler.log /var/log/cinder/volume.log nova配置文件 /etc/nova/nova.conf nova日志文件 /var/log/nova/api.log /var/log/nova/cert.log /var/log/nova/scheduler.log /var/log/nova/conductor.log Horizon配置文件 /etc/heat/heat.conf Horizon日志文件 /var/log/heat/heat-api-cfn.log /var/log/heat/heat-api-cloudwatch.log /var/log/heat/heat-api.log /var/log/heat/heat-engine.log /var/log/heat/heat-manage.log 共享存储target配置文件 /etc/tgt/targets.conf 7.openstack计算节点 计算节点所要启动的服务 openstack-nova-compute openstack-cinder-scheduler openstack-cinder-volume libvirtd tgtd 注意：纯计算节点只包含openstack-nova-compute和libvirtd服务 nova配置文件 /etc/nova/nova.conf nova日志文件 /var/log/nova/compute.log cinder配置文件 /etc/cinder/cinder.conf cinder日志文件 /var/log/cinder/scheduler.log /var/log/cinder/volume.log libvirt配置文件 /etc/libvirt/libvirtd.conf 共享存储target配置文件 /etc/tgt/targets.conf 8.openstack常见问题 openstack中使用vnc无法连接虚拟机 &emsp; &emsp;原因是Mirantis的Master节点没有连接到公网的地址，而默认在这个节点上会使用8.8.8.8的DNS服务器地址来做地址解析，所以如果该节点访问不了这个地址（就算连接到Internet也可能访问不了这个地址，因为8.8.8.8是Google的服务器，会被和谐掉，你懂的），就会出现DNS解析超时的情况，因此会出现如题所示的错误。解决方法有2个，一个是将8.8.8.8地址改为一个内网或者公网可以访问到DNS服务器，二是将这个地址改为127.0.0.1 openstck 计算节点关机，虚拟机无法启动 检查服务正常化 nova-manage service list 重置状态（控制节点上操作） source openrc nova list –all-tenants nova reset-state instance-id nova stop instance-id nova start instance-id]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[shadowsocks流量监控脚本]]></title>
      <url>%2F2017%2F08%2F30%2Fshadowsocks%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7%E8%84%9A%E6%9C%AC%2F</url>
      <content type="text"><![CDATA[#!/usr/bin/env python #coding=utf8import jsonimport osdef run_cmd(port): cmd = “iptables-save | grep -w %s | grep -v grep | wc -l” % port num = os.popen(cmd).read() if int(num) == 0: cmd = “iptables -A INPUT -p tcp –dport %s;” % port cmd += “iptables -A OUTPUT -p tcp –sport %s;” % port os.popen(cmd).read()def get_network(): cmd = “iptables -vnL| awk ‘{print $2,$11 }’” #cmd = &quot;iptables -vnL&quot; data = os.popen(cmd).read() data += &quot;\n&quot; print data file_name = &quot;/root/network.txt&quot; f = open(file_name, &quot;a+&quot;) f.write(data) f.close() def get_port(): file_path = “/etc/shadowsocks/config.json” f = open(file_path, ‘r’) data = json.load(f) for port in (data[“port_password”]).keys(): run_cmd(port) get_network()if name == “main“: get_port()]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[shadowsocks管理脚本]]></title>
      <url>%2F2017%2F08%2F30%2Fshadowsocks%E7%AE%A1%E7%90%86%E8%84%9A%E6%9C%AC%2F</url>
      <content type="text"><![CDATA[#!/usr/bin/python #coding=utf-8 import osimport jsonimport datetimeimport stringfrom random import choicefrom pprint import pprintfrom optparse import OptionParser “”” 操作前备份 /etc/shadowsocks/config.json 新加用户操用 修改 /etc/shadowsocks/config.json 重启 /etc/init.d/shadowsocks restart 加防火墙规则 删除用户操用 修改 /etc/shadowsocks/config.json 重启 /etc/init.d/shadowsocks restart 删防火墙规则 “”” shadowsocks_cnf = “/etc/shadowsocks/config.json”passwd_len = 8 def create_new_passwd(length=8, chars=string.ascii_letters + string.digits): return &apos;&apos;.join([choice(chars) for i in range(length)]) def store(data): with open(shadowsocks_cnf, ‘w’) as json_file: json_file.write(json.dumps(data)) def load(): with open(shadowsocks_cnf) as json_file: data = json.load(json_file) return data def store_new_user(port,passwd): data = load() data[&apos;port_password&apos;][port]=passwd store(data) def remove_old_user(port): try: data = load() old_passwd = data[&apos;port_password&apos;].pop(port) store(data) return {&quot;port&quot;:port,&quot;passwd&quot;:old_passwd} except: return False def get_next_port(): data = load() ports = data[&apos;port_password&apos;].keys() return int(max(ports))+1 def user_list(): data = load() users = data[‘port_password’] return users def add_user(): next_port = get_next_port() next_passwd = create_new_passwd(length=passwd_len) store_new_user(next_port, next_passwd) return {&quot;port&quot;:next_port,&quot;passwd&quot;:next_passwd} def del_user(port): return remove_old_user(port) def reload_ss(): cmd = &quot;/etc/init.d/shadowsocks restart&quot; os.popen(cmd) def iptables_add_new_port(port): cmd = &quot;iptables -A INPUT -p tcp --dport %s -j ACCEPT &amp;&amp; iptables -A OUTPUT -p tcp --sport %s -j ACCEPT &amp;&amp; service iptables save&quot;%(port,port) os.popen(cmd) def iptables_del_old_port(port): cmd = &quot;iptables -D INPUT -p tcp --dport %s -j ACCEPT &amp;&amp; iptables -D OUTPUT -p tcp --sport %s -j ACCEPT &amp;&amp; service iptables save&quot;%(port,port) os.popen(cmd) def bak_cnf(): bak_time = datetime.datetime.now().strftime(&apos;%Y%m%d%H%M%S&apos;) cmd = &quot;cp /etc/shadowsocks/config.json /etc/shadowsocks/config.json.bak_%s&quot; % bak_time os.popen(cmd) if name == “main“: from optparse import OptionParser parser = OptionParser() parser.add_option(&quot;-p&quot;, &quot;--userlist&quot;, action=&quot;store_true&quot;, dest=&quot;userlist&quot;, default=False, help=&quot;python ss_manage.py --userlist&quot;) parser.add_option(&quot;-z&quot;, &quot;--adduser&quot;, action=&quot;store_true&quot;, dest=&quot;adduser&quot;, default=False, help=&quot;python ss_manage.py --adduser&quot;) parser.add_option(&quot;-d&quot;, &quot;--deluser&quot;, action=&quot;store&quot;, dest=&quot;deluser&quot;, default=False, help=&quot;python ss_manage.py --deluser port&quot;) (options, args) = parser.parse_args() if options.userlist == True: users = user_list() print &quot;用户列表 :&quot; ,len(users) print &quot;-&quot;*30 for k,v in users.items(): print &quot;port:&quot;,k,&quot;passwd:&quot;,v elif options.adduser == True: bak_cnf() new_user = add_user() reload_ss() iptables_add_new_port(new_user[&quot;port&quot;]) print &quot;添加用户:&quot; print &quot;-&quot; * 30 print &quot;port:&quot;, new_user[&quot;port&quot;], &quot;passwd:&quot;, new_user[&quot;passwd&quot;] elif options.deluser: bak_cnf() old_user = del_user(options.deluser) reload_ss() if old_user == False: print &quot;删除用户:&quot; print &quot;-&quot; * 30 print(&quot;端口%s不在列表中&quot;%options.deluser) else: print &quot;删除用户:&quot; print &quot;-&quot; * 30 print &quot;port:&quot;, old_user[&quot;port&quot;], &quot;passwd:&quot;, old_user[&quot;passwd&quot;] iptables_del_old_port(old_user[&quot;port&quot;]) else: parser.print_help()]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Cisco 路由器防火墙配置命令]]></title>
      <url>%2F2017%2F07%2F30%2FCisco%E8%B7%AF%E7%94%B1%E5%99%A8%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4%2F</url>
      <content type="text"><![CDATA[一、access-list 用于创建访问规则. access-list [ normal | special ] listnumber1 &#123; permit | deny &#125; source-addr [ source-mask ] （2）创建扩展访问列表 access-list [ normal | special ] listnumber2 &#123; permit | deny &#125; protocol source-addr source-mask [ operator port1 [ port2 ] ] dest-addr dest-mask [ operator port1 [ port2 ] | icmp-type [ icmp-code ] ] [ log ] （3）删除访问列表 no access-list &#123; normal | special &#125; &#123; all | listnumber [ subitem ] &#125; 【参数说明】 normal 指定规则加入普通时间段. special 指定规则加入特殊时间段. listnumber1 是1到99之间的一个数值,表示规则是标准访问列表规则. listnumber2 是100到199之间的一个数值,表示规则是扩展访问列表规则. permit 表明允许满足条件的报文通过. deny 表明禁止满足条件的报文通过. protocol 为协议类型,支持ICMP、TCP、UDP等,其它的协议也支持,此时没有端口比较的概念;为IP时有特殊含义,代表所有的IP协议. source-addr 为源地址. source-mask 为源地址通配位,在标准访问列表中是可选项,不输入则代表通配位为0.0.0.0. dest-addr 为目的地址. dest-mask 为目的地址通配位. operator[可选] 端口操作符,在协议类型为TCP或UDP时支持端口比较,支持的比较操作有：等于（eq）、大于（gt）、小于（lt）、不等于（neq）或介于（range）;如果操作符为range,则后面需要跟两个端口. port1 在协议类型为TCP或UDP时出现,可以为关键字所设定的预设值（如telnet）或0~65535之间的一个数值. port2 在协议类型为TCP或UDP且操作类型为range时出现;可以为关键字所设定的预设值（如telnet）或0~65535之间的一个数值. icmp-type[可选] 在协议为ICMP时出现,代表ICMP报文类型;可以是关键字所设定的预设值（如echo-reply）或者是0~255之间的一个数值. icmp-code在协议为ICMP且没有选择所设定的预设值时出现;代表ICMP码,是0~255之间的一个数值. log [可选] 表示如果报文符合条件,需要做日志. listnumber 为删除的规则序号,是1~199之间的一个数值. subitem[可选] 指定删除序号为listnumber的访问列表中规则的序号. 【缺省情况】 系统缺省不配置任何访问规则.``` ``` 【命令模式】 全局配置模式 【使用指南】 同一个序号的规则可以看作一类规则;所定义的规则不仅可以用来在接口上过滤报文,也可以被如DDR等用来判断一个报文是否是感兴趣的报文,此时,permit与deny表示是感兴趣的还是不感兴趣的. 使用协议域为IP的扩展访问列表来表示所有的IP协议. 同一个序号之间的规则按照一定的原则进行排列和选择,这个顺序可以通过 show access-list 命令看到. 【举例】 允许源地址为10.1.1.0 网络、目的地址为10.1.2.0网络的WWW访问,但不允许使用FTP. Quidway(config)#access-list 100 permit tcp 10.1.1.0 0.0.0.255 10.1.2.0 0.0.0.255 eq www Quidway(config)#access-list 100 deny tcp 10.1.1.0 0.0.0.255 10.1.2.0 0.0.0.255 eq ftp 【相关命令】 ip access-group 二、clear access-list counters 清除访问列表规则的统计信息. clear access-list counters [ listnumber ] 【参数说明】 listnumber [可选] 要清除统计信息的规则的序号,如不指定,则清除所有的规则的 统计信息. ``` 【缺省情况】 任何时候都不清除统计信息. 【命令模式】 特权用户模式 【使用指南】 使用此命令来清除当前所用规则的统计信息,不指定规则编号则清除所有规则的统计信息. 【举例】 例1：清除当前所使用的序号为100的规则的统计信息. Quidway#clear access-list counters 100 例2：清除当前所使用的所有规则的统计信息. Quidway#clear access-list counters 【相关命令】 access-list 三、firewall 启用或禁止防火墙. firewall { enable | disable } 【参数说明】 enable 表示启用防火墙. disable 表示禁止防火墙. 【缺省情况】 系统缺省为禁止防火墙. 【命令模式】 全局配置模式 【使用指南】 使用此命令来启用或禁止防火墙,可以通过show firewall命令看到相应结果.如果采用了时间段包过滤,则在防火墙被关闭时也将被关闭;该命令控制防火墙的总开关.在使用 firewall disable 命令关闭防火墙时,防火墙本身的统计信息也将被清除. 【举例】 启用防火墙. Quidway(config)#firewall enable 【相关命令】 access-list,ip access-group 四、firewall default 配置防火墙在没有相应的访问规则匹配时,缺省的过滤方式. firewall default &#123; permit | deny &#125; 【参数说明】 permit 表示缺省过滤属性设置为“允许”. deny 表示缺省过滤属性设置为“禁止”. 【缺省情况】 在防火墙开启的情况下,报文被缺省允许通过. 【命令模式】 全局配置模式 【使用指南】 当在接口应用的规则没有一个能够判断一个报文是否应该被允许还是禁止时,缺省的过滤属性将起作用;如果缺省过滤属性是“允许”,则报文可以通过,否则报文被丢弃. 【举例】 设置缺省过滤属性为“允许”. Quidway(config)#firewall default permit 五、ip access-group 使用此命令将规则应用到接口上.使用此命令的no形式来删 除相应的设置. ip access-group listnumber { in | out } [ no ] ip access-group listnumber { in | out } 【参数说明】 listnumber 为规则序号,是1~199之间的一个数值. in 表示规则用于过滤从接口收上来的报文. out 表示规则用于过滤从接口转发的报文. 【缺省情况】 没有规则应用于接口. 【命令模式】 接口配置模式. 【使用指南】 使用此命令来将规则应用到接口上;如果要过滤从接口收上来的报文,则使用 in 关键字;如果要过滤从接口转发的报文,使用out 关键字.一个接口的一个方向上最多可以应用20类不同的规则;这些规则之间按照规则序号的大小进行排列,序号大的排在前面,也就是优先级高.对报文进行过滤时,将采用发现符合的规则即得出过滤结果的方法来加快过滤速度.所以,建议在配置规则时,尽量将对同一个网络配置的规则放在同一个序号的访问列表中;在同一个序号的访问列表中,规则之间的排列和选择顺序可以用show access-list命令来查看. 【举例】 将规则101应用于过滤从以太网口收上来的报文. Quidway(config-if-Ethernet0)#ip access-group 101 in 【相关命令】 access-list 六、settr 设定或取消特殊时间段. settr begin-time end-time no settr 【参数说明】 begin-time 为一个时间段的开始时间. end-time 为一个时间段的结束时间,应该大于开始时间. 【缺省情况】 系统缺省没有设置时间段,即认为全部为普通时间段. 【命令模式】 全局配置模式 【使用指南】 使用此命令来设置时间段;可以最多同时设置6个时间段,通过show timerange 命令可以看到所设置的时间.如果在已经使用了一个时间段的情况下改变时间段,则此修改将在一分钟左右生效（系统查询时间段的时间间隔）.设置的时间应该是24小时制.如果要设置类似晚上9点到早上8点的时间段,可以设置成“settr 21:00 23:59 0:00 8:00”,因为所设置的时间段的两个端点属于时间段之内,故不会产生时间段内外的切换.另外这个设置也经过了2000问题的测试. 【举例】 例1：设置时间段为8:30 ~ 12:00,14:00 ~ 17:00. Quidway(config)#settr 8:30 12:00 14:00 17:00 例2： 设置时间段为晚上9点到早上8点. Quidway(config)#settr 21:00 23:59 0:00 8:0 【相关命令】 timerange,show timerange 七、show access-list 显示包过滤规则及在接口上的应用. show access-list [ all | listnumber | interface interface-name ] 【参数说明】 all 表示所有的规则,包括普通时间段内及特殊时间段内的规则. listnumber 为显示当前所使用的规则中序号为listnumber的规则. interface 表示要显示在指定接口上应用的规则序号. interface-name 为接口的名称. 【命令模式】 特权用户模式 【使用指南】 使用此命令来显示所指定的规则,同时查看规则过滤报文的情况.每个规则都有一个相应的计数器,如果用此规则过滤了一个报文,则计数器加1;通过对计数器的观察可以看出所配置的规则中,哪些规则是比较有效,而哪些基本无效.可以通过带interface关键字的show access-list命令来查看某个接口应用规则的情况. 【举例】 例1：显示当前所使用的序号为100的规则. Quidway#show access-list 100 Using normal packet-filtering access rules now. 100 deny icmp 10.1.0.0 0.0.255.255 any host-redirect (3 matches,252 bytes – rule 1) 100 permit icmp 10.1.0.0 0.0.255.255 any echo (no matches – rule 2) 100 deny udp any any eq rip (no matches – rule 3) 例2： 显示接口Serial0上应用规则的情况. Quidway#show access-list interface serial 0 Serial0: access-list filtering In-bound packets : 120 access-list filtering Out-bound packets: None 【相关命令】 access-list 八、show firewall 显示防火墙状态. show firewall 【命令模式】 特权用户模式 【使用指南】 使用此命令来显示防火墙的状态,包括防火墙是否被启用,启用防火墙时是否采用了时间段包过滤及防火墙的一些统计信息. 【举例】 显示防火墙状态. Quidway#show firewall Firewall is enable, default filtering method is ‘permit’. TimeRange packet-filtering enable. InBound packets: None; OutBound packets: 0 packets, 0 bytes, 0% permitted, 0 packets, 0 bytes, 0% denied, 2 packets, 104 bytes, 100% permitted defaultly, 0 packets, 0 bytes, 100% denied defaultly. From 00:13:02 to 06:13:21: 0 packets, 0 bytes, permitted. 【相关命令】 firewall 九、show isintr 显示当前时间是否在时间段之内. show isintr 【命令模式】 特权用户模式 【使用指南】 使用此命令来显示当前时间是否在时间段之内. 【举例】 显示当前时间是否在时间段之内. Quidway#show isintr It is NOT in time ranges now. 【相关命令】 timerange,settr 十、show timerange 显示时间段包过滤的信息. show timerange 【命令模式】 特权用户模式 【使用指南】 使用此命令来显示当前是否允许时间段包过滤及所设置的时间段. 【举例】 显示时间段包过滤的信息. Quidway#show timerange TimeRange packet-filtering enable. beginning of time range: 01:00 - 02:00 03:00 - 04:00 end of time range. 【相关命令】 timerange,settr 十一、timerange 启用或禁止时间段包过滤功能. timerange &#123; enable | disable &#125; 【参数说明】 enable 表示启用时间段包过滤. disable 表示禁止采用时间段包过滤. 【缺省情况】 系统缺省为禁止时间段包过滤功能. 【命令模式】 全局配置模式 【使用指南】 使用此命令来启用或禁止时间段包过滤功能,可以通过show firewall命令看到,也可以通过show timerange命令看到配置结果.在时间段包过滤功能被启用后,系统将根据当前的时间和设置的时间段来确定使用时间段内（特殊）的规则还是时间段外（普通）的规则.系统查询时间段的精确度为1分钟.所设置的时间段的两个端点属于时间段之内. 【举例】 启用时间段包过滤功能. Quidway(config)#timerange enable 【相关命令】 settr,show timerange ```]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Cisco路由器的安全配置]]></title>
      <url>%2F2017%2F07%2F30%2FCisco%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[一,路由器访问控制的安全配置 1,严格控制可以访问路由器的管理员。任何一次维护都需要记录备案。 2,建议不要远程访问路由器。即使需要远程访问路由器，建议使用访问控制列表和高强度的密码控制。 3,严格控制CON端口的访问。具体的措施有： A,如果可以开机箱的，则可以切断与CON口互联的物理线路。 B,可以改变默认的连接属性，例如修改波特率(默认是96000，可以改为其他的)。 C,配合使用访问控制列表控制对CON口的访问。 如：Router(Config)#Access-list 1 permit 192.168.0.1 Router(Config)#line con 0 Router(Config-line)#Transport input none Router(Config-line)#Login local Router(Config-line)#Exec-timeoute 5 0 Router(Config-line)#access-class 1 in Router(Config-line)#end D,给CON口设置高强度的密码。 4,如果不使用AUX端口，则禁止这个端口。默认是未被启用。禁止如： Router(Config)#line aux 0 Router(Config-line)#transport input none Router(Config-line)#no exec 5,建议采用权限分级策略。如： Router(Config)#username BluShin privilege 10 XXX Router(Config)#privilege EXEC level 10 telnet Router(Config)#privilege EXEC level 10 show ip access-list 6,为特权模式的进入设置强壮的密码。不要采用enable password设置密码。而要采用enable secret命令设置。并且要启用Service password-encryption。 7,控制对VTY的访问。如果不需要远程访问则禁止它。如果需要则一定要设置强壮的密码。由于VTY在网络的传输过程中为加密，所以需要对其进行严格的控制。如：设置强壮的密码；控制连接的并发数目；采用访问列表严格控制访问的地址；可以采用AAA设置用户的访问控制等。 8,IOS的升级和备份，以及配置文件的备份建议使用FTP代替TFTP。如： Router(Config)#ip ftp username BluShin Router(Config)#ip ftp password XXX Router#copy startup-config ftp: 9,及时的升级和修补IOS软件。 二,路由器网络服务安全配置 1,禁止CDP(Cisco Discovery Protocol)。如： Router(Config)#no cdp run Router(Config-if)# no cdp enable 2,禁止其他的TCP、UDP Small服务。 Router(Config)# no service tcp-small-servers Router(Config)# no service udp-samll-servers 3,禁止Finger服务。 Router(Config)# no ip finger Router(Config)# no service finger 4,建议禁止HTTP服务。 Router(Config)# no ip http server 如果启用了HTTP服务则需要对其进行安全配置：设置用户名和密码；采用访问列表进行控制。如： Router(Config)# username BluShin privilege 10 XXX Router(Config)# ip http auth local Router(Config)# no access-list 10 Router(Config)# access-list 10 permit 192.168.0.1 Router(Config)# access-list 10 deny any Router(Config)# ip http access-class 10 Router(Config)# ip http server Router(Config)# exit 5,禁止BOOTp服务。 Router(Config)# no ip bootp server 禁止从网络启动和自动从网络下载初始配置文件。 Router(Config)# no boot network Router(Config)# no servic config 6,禁止IP Source Routing。 Router(Config)# no ip source-route 7,建议如果不需要ARP-Proxy服务则禁止它，路由器默认识开启的。 Router(Config)# no ip proxy-arp Router(Config-if)# no ip proxy-arp 8,明确的禁止IP Directed Broadcast。 Router(Config)# no ip directed-broadcast 9,禁止IP Classless。 Router(Config)# no ip classless 10,禁止ICMP协议的IP Unreachables,Redirects,Mask Replies。 Router(Config-if)# no ip unreacheables Router(Config-if)# no ip redirects Router(Config-if)# no ip mask-reply 11,建议禁止SNMP协议服务。在禁止时必须删除一些SNMP服务的默认配置。或者需要访问列表来过滤。如： Router(Config)# no snmp-server community]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[cisco路由器配置ipsecvpn]]></title>
      <url>%2F2017%2F06%2F30%2Fcisco%E8%B7%AF%E7%94%B1%E5%99%A8%E9%85%8D%E7%BD%AEipsecvpn%2F</url>
      <content type="text"><![CDATA[步骤1：基本配置保证在没有做vpn之前网络连通 步骤2：创建IKE加密策略 r1(config)#crypto isakmp policy 1 r1(config-isakmp)#encryption des &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; （加密消息算法） r1(config-isakmp)#authentication pre-share &emsp; &emsp; &emsp;（对等体验证方法） r1(config-isakmp)#hash md5 &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp;（消息完整性算法） r1(config-isakmp)#group 1 &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp;&emsp;&emsp;&emsp;&emsp;（密钥交换参数） r1#show crypto isakmp policy&emsp; &emsp; &emsp; &emsp; &emsp; &emsp;&emsp;&emsp;&emsp; &emsp;显示策略配置结果 Protection suite of priority 1 encryption algorithm: DES - Data Encryption Standard (56 bit keys). hash algorithm: Message Digest 5 authentication method: Pre-Shared Key Diffie-Hellman group: #1 (768 bit) lifetime: 86400 seconds, no volume limitDefault protection suite encryption algorithm: DES - Data Encryption Standard (56 bit keys). hash algorithm: Secure Hash Standard authentication method: Rivest-Shamir-Adleman Signature Diffie-Hellman group: #1 (768 bit) lifetime: 86400 seconds, no volume limit B路由器配置同理，注意两端使用的各种方法要相同 步骤3：由于使用了共享密钥验证对等体，定义密钥。注意密钥和对等体要一起定义 r1(config)#crypto isakmp key cisco address 135.25.1.2 r2(config)#crypto isakmp key cisco address 135.25.1.1 步骤4：定义IPSEC变换集 r1(config)#crypto ipsec transform-set future esp-des r2(config)#crypto ipsec transform-set future esp-des 注意两端的参数要相同 r1#show crypto ipsec transform-set Transform set future: &#123; esp-des &#125; will negotiate = &#123; Tunnel, &#125; 步骤5：定义将要保护的数据流 r1(config)#access-list 101 permit ip 135.25.3.0 0.0.0.255 135.25.4.0 0.0.0.255 r2(config)# access-list 101 permit ip 135.25.4.0 0.0.0.255 135.25.3.0 0.0.0.255 步骤6：配置加密映射：将加密策略和流量联系起来 r1(config)#crypto map zhangyu 10 ipsec-isakmp % NOTE: This new crypto map will remain disabled until a peer and a valid access list have been configured. r1(config-crypto-map)#set peer 135.25.1.2 r1(config-crypto-map)#set transform-set future r1(config-crypto-map)#match address 101 B路由器同理 步骤7：将加密映射应用到接口 r1(config)#int s 0 r1(config-if)#crypto map zhangyu 步骤8：测试显示A路由器上IPSEC连接 r1#show crypto engine connections active ID Interface IP-Address State Algorithm Encrypt Decrypt 在PC1上ping 135.25.4.1 r1#show crypto engine connections active ID Interface IP-Address State Algorithm Encrypt Decrypt2000 Serial0 135.25.1.1 set DES_56_CBC 0 52001 Serial0 135.25.1.1 set DES_56_CBC]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[cisco路由器恢复enable密码]]></title>
      <url>%2F2017%2F06%2F30%2Fcisco%E8%B7%AF%E7%94%B1%E5%99%A8%E6%81%A2%E5%A4%8Denable%E5%AF%86%E7%A0%81%2F</url>
      <content type="text"><![CDATA[&emsp; &emsp; 在Cisco路由器忘记或丢失enable密码的情况时，一共有两种方法恢复，取决于你使用的路由器是哪一系列产品。 第一种方法： &emsp; &emsp;使用这种方法可恢复下列路由器：Cisco 2000系列、2500系列、3000系列、使用680x0Motorol a CPU的Cisco 4000系列、运行10.0版本以上Cisco IOS系统的7000系列路由器。 实现步骤： 1.&emsp; &emsp;在路由器的console口接上一个终端或用安装仿真终端软件的PC机。 2.&emsp; &emsp;输入show version命令，然后记下寄存器值，通常是0x2102 or 0x102。这个值显示在最后一行，注意寄存器的配置是否把Break设为enable或disable。 缺省配置寄存器值是0x2102。这个值从左数第三个数字如果是1，则是disable Break；如果为零，则Break为enabled。 3.&emsp; &emsp;切断电源后再重启。 4.&emsp; &emsp;在路由器启动的60秒内在终端机上按Break键。将显示rommon&gt; 提示符。如果提示符不是这样，则终端没有发出正确的中断信号，检查Break键是否正确或是否被设为disable。 5.&emsp; &emsp;在提示符下输入o/r0x42或o/r0x41，o/r0x42意思是从Flash memory引导，o/r0x41意思是从ROMs引导(注意，第一个字符是字母o，不是数字0)。最好用0x42，在Flash memory没有装或erase的情况下，才用0x41，如果有0x41则只能view或erase配置，不能直接更改密码。 6.&emsp; &emsp;在rommon&gt;提示符下输入初始化命令。 7.&emsp; &emsp;输入系统配置对话提示符敲no,一直等提示信息显示：Press RETURN to get started! 8.&emsp; &emsp;敲回车，出现Router&gt;提示符。 9.&emsp; &emsp;输入enable命令，出现Router#提示符。 10.&emsp; &emsp;选择下面选项中的一项： &emsp; &emsp;如果password没有加密，直接用more nvram:startup-config命令可以看密码；在password加密的情况下，无法看，只能修改，输入命令如下： Router # configure memory Router # configure terminal Router(config)# enable secret 1234abcd Router(config)# ctrl-z Router # write memory 11.&emsp; &emsp;在EXEC提示符输入configure terminal进入配置模式。输入config-register命令，把在第二步中记录的寄存器值复原。 12.&emsp; &emsp;敲Ctrl-Z，退出配置状态。 13.&emsp;&emsp;在特权模式下用write memory命令保存配置，然后reboot重启。 第二种方法 &emsp; &emsp;使用这种方法可恢复下列路由器：Cisco 1003、1600系列、3600系列、4500系列、7200系列、7500系列和IDT Orion-Based路由器。 实现步骤： 前四步与上一种方法一样。 5.&emsp; &emsp;在rommon&gt;提示符下输入confreg命令，显示如下： &emsp; &emsp; &emsp; &emsp;Do you wish to change configuration[y/n]? &emsp; &emsp;输入yes，然后回车。在回答后面的问题时一直选择no，直到出现“ignore system config info[y/n]?”时输入yes。 &emsp; &emsp;接着继续敲no回答，一直到看到“change boot characteristics[y/n]?”时输入yes显示如下：enter to boot: &emsp; &emsp;在这个提示符下可以有1和2两种选择。如果Flash memory iserased选择1，这样只能view or erase配置，不能直接修改password。最好选择2。出现如下提示：Do you wish to change configuration[y/n]? 回答no，然后回车，显示“rommon&gt;”。 6.在特权EXEC下输入reload命令。 &emsp; &emsp;后面操作同第一种方法。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[cisco3550 端口速率限制实现方法]]></title>
      <url>%2F2017%2F05%2F30%2Fcisco3550%E7%AB%AF%E5%8F%A3%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6%2F</url>
      <content type="text"><![CDATA[一、网络说明 PC1接在Cisco3550 F0/1上，速率为1Ｍ PC2接在Cisco3550 F0/2上，速率为2Ｍ Cisco3550的G0/1为出口 二、详细配置过程 注：每个接口每个方向只支持一个策略；一个策略可以用于多个接口。因此所有PC的下载速率的限制都应该定义在同一个策略(在本例子当中为policy-map user-down)，而PC不同速率的区分是在Class-map分别定义。1、在交换机上启动QOS &emsp;&emsp;Switch(config)#mls qos //在交换机上启动QOS２、分别定义PC1(10.10.1.1)和PC2(10.10.2.1)访问控制列表 &emsp;&emsp;Switch(config)#access-list 10 permit 10.10.1.0 0.0.0.255 //控制pc1上行流量 &emsp;&emsp;Switch(config)#access-list 100 permit any 10.10.1.0 0.0.0.255 //控制pc1下行流量 &emsp;&emsp;Switch(config)#access-list 11 permit 10.10.2.0 0.0.0.255 //控制pc2上行流量 &emsp;&emsp;Switch(config)#access-list 111 permit any 10.10.2.0 0.0.0.255 //控制pc2下行流量３、定义类，并和上面定义的访问控制列表绑定 &emsp;&emsp;Switch(config)# class-map user1-up //定义PC１上行的类，并绑定访问列表10 &emsp;&emsp;Switch(config-cmap)# match access-group 10 &emsp;&emsp;Switch(config-cmap)# exit&emsp;&emsp;Switch(config)# class-map user2-up &emsp;&emsp;Switch(config-cmap)# match access-group 11 //定义PC2上行的类，并绑定访问列表10 &emsp;&emsp;Switch(config-cmap)# exit &emsp;&emsp;Switch(config)# class-map user1-down &emsp;&emsp;Switch(config-cmap)# match access-group 100 //定义PC1下行的类，并绑定访问列表100 &emsp;&emsp;Switch(config-cmap)# exit&emsp;&emsp;Switch(config)# class-map user2-down &emsp;&emsp;Switch(config-cmap)# match access-group 111 //定义PC2下行的类，并绑定访问列表111 &emsp;&emsp;Switch(config-cmap)# exit4、定义策略，把上面定义的类绑定到该策略 &emsp;&emsp;Switch(config)# policy-map user1-up //定义PC１上行的速率为1M &emsp;&emsp;Switch(config-pmap)# class user1-up &emsp;&emsp;Switch(config-pmap-c)# trust dscp 信任差分服务代码点,用来对每一类流量实施各种QOS策略，用户进来的数据包的DSCP缺省都为0 &emsp;&emsp;Switch(config-pmap-c)# police 1024000 1024000 exceed-action drop 任何超过策略限制速率的通信流将会被丢弃（bits、bytes） &emsp;&emsp;Switch(config)# policy-map user2-up //定义PC２上行的速率为2M &emsp;&emsp;Switch(config-pmap)# class user2-up&emsp;&emsp;Switch(config-pmap-c)# trust dscp &emsp;&emsp;Switch(config-pmap-c)# police 2048000 1024000 exceed-action drop&emsp;&emsp;Switch(config)# policy-map user-down &emsp;&emsp;Switch(config-pmap)# class user1-down&emsp;&emsp;Switch(config-pmap-c)# trust dscp &emsp;&emsp;Switch(config-pmap-c)# police 1024000 1024000 exceed-action drop &emsp;&emsp;Switch(config-pmap-c)# exit &emsp;&emsp;Switch(config-pmap)# class user2-down &emsp;&emsp;Switch(config-pmap-c)# trust dscp &emsp;&emsp;Switch(config-pmap-c)# police 2048000 1024000 exceed-action dro &emsp;&emsp;Switch(config-pmap-c)# exit５、在接口上运用策略&emsp;&emsp;Switch(config)# interface f0/1 &emsp;&emsp;Switch(config-if)# service-policy input user1-up &emsp;&emsp;Switch(config)# interface f0/2 &emsp;&emsp;Switch(config-if)# service-policy input user2-up &emsp;&emsp;Switch(config)# interface g0/1 &emsp;&emsp;Switch(config-if)# service-policy input user-down]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[交换机VTP配置]]></title>
      <url>%2F2017%2F05%2F30%2F%E4%BA%A4%E6%8D%A2%E6%9C%BAVTP%E9%85%8D%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[switch&gt; 进入用户模式 switch&gt;enable 进入特权模式 switch#configure terminal 进入全局配置模式 switch(config)# hostname s1 设置交换机的主机名 s1(config)#enable passwd cisco 使能口令 s1(config)#enable secret cisco使能密码(加密的特权密码)s1(config)#service password-encryption 所有的密码全变成密文 S1(config)# no ip domain-lookup 关闭寻找域名服务S1(config)#alias exec a show running-configure 别名 S1(config)# line console 0 S1(config-line)# password ciscoS1(config-line)#login S1(config-line)#exec-timeout 0 0 (防止系统超时退出特权模式) 零代表无限制 0分0秒S1(config-line)#logging synchronous(避免被系统出现的控制信息打断命令) s1(config)#interface vlan 1 s1(config-if)#ip address 192.168.10.1 255.255.255.0 配置管理IPs1(config-if)#speed 100 配置端口速度为100M s1(config-if)#duplex auto 自动 full 全双工 half 半双工 s1(config-if)#no shutdown 开启端口使配置生效s1(config)#ip default-gateway 192.168.10.254 配置交换机默认网关 S1#show running-configure 检查配置(保存在内存RAM中) 中继模式S1(config-if)# switchport mode access 接入链路(swich--PC)S1(config-if)# switchport mode trunk 中继模式(swich--swich)S1(config-if)#switchport trunk allowed vlan remove 10将vlan 10从该中继链路删除 add 增加 VLANs1#vlan database s1(vlan)#vlan 10 name vlan10 s1(config)#vlan 10 建立vlans1(config-vlan)#name caiwu vlan命名s1(config)#no vlan 10 删除vlan 10s1#show vlan brief 验证 VTPs1(config)#vtp version 2 启用版本2s1(config)#vtp domain test 加入管理域s1(config)#vtp mode server 配置成VTP服务器 client 配置成VTP客户端 transparent 配置成VTP透明模式s1(config)#vtp password cisco vtp口令s1(config)#vtp pruning 启用vtp修剪switch(config)#no vtp pruning 关闭VTP修剪S1(config-if)#switchport trunk pruning vlan remove vlan-id 从可修剪列表中去除某VLANs1(config)#vtp domain test-a 脱离vtp域s1#show vtp status 检查配置 配置远程登陆S1(config)#line vty 0 15S1(config-line)#password ciscoS1(config-line)#exec-timeout 0 0S1(config-line)#logging synchronousS1(config-line)#login S1#erase startup-config 清除配置S1#copy running-config startup-config 保存配置到（NVRAM中）S1#write 写入配置S1#show startup-config 检查保存的配置信息S1#reload 重启]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[利用squid代理+stunnel加密翻墙]]></title>
      <url>%2F2017%2F04%2F28%2F%E5%88%A9%E7%94%A8squid%E4%BB%A3%E7%90%86-stunnel%E5%8A%A0%E5%AF%86%E7%BF%BB%E5%A2%99%2F</url>
      <content type="text"><![CDATA[一.准备工作： 操作系统：Centos6.5， 香港机器：安装Squid与stunnel服务器端，IP：1.1.1.1 国内机器：安装stunnel客户端，IP：172.16.1.1 二.开始安装 1.&emsp;yum–y install squid &emsp;vi /etc/squid/squid.conf &emsp; &emsp; &emsp; &emsp; 编辑配置文件 将 http_access deny all改为http_access allow all将 http_port 3128改为http_port 1.1.1.1:3128 2.&emsp;squid -k parse &emsp; &emsp; &emsp; &emsp; 检查配置参数是否有错 squid –z&emsp; &emsp; &emsp; &emsp;&emsp; &emsp; &emsp; &emsp; &emsp; &emsp; 生成缓存 service squid restart&emsp; &emsp; &emsp; &emsp;&emsp; &emsp; &emsp; &emsp;启动服务 3.&emsp;yum–y install stunnel 安装stunnel4.&emsp;cd /etc/stunnel opensslreq -new -x509 -days 365 -nodes -out stunnel.pem -keyout stunnel.pem&emsp; &emsp; &emsp; &emsp;生成一个密钥文件 opensslgendh 512&gt;&gt; stunnel.pem&emsp; &emsp; &emsp; &emsp;生成Diffie-Hellman部分 5.&emsp;默认配置文件在/usr/share/doc/stunnel-4.29/stunnel.conf-sample下，这里我手动创建一个vi stunnel.conf cert= /etc/stunnel/stunnel.pemCAfile= /etc/stunnel/stunnel.pemsocket= l:TCP_NODELAY=1socket= r:TCP_NODELAY=1 ;;;chroot= /var/run/stunnelpid= /tmp/stunnel.pidverify= 3 ;;;CApath = certs;;;CRLpath = crls;;;CRLfile = crls.pem setuid= stunnel stunnel用户setgid= stunnel stunnel组 ;;;client=yescompression= zlib;;;taskbar = nodelay= no;;;failover = rr;;;failover = priosslVersion= SSLv3debug= 4syslog= nooutput= stunnel.log [sproxy]accept= 8888 stunnel监听的端口，需要客户端指向connect= 1.1.1.1:3128 本地squid监听端口 6.&emsp;groupadd -g 122 stunnel &emsp; &emsp; &emsp; &emsp;&emsp; &emsp;创建组 &emsp; &emsp;&emsp; &emsp; useradd -c stunnel -d /nonexistent -m -g 122 -u 122 stunnel&emsp; &emsp; &emsp; &emsp;&emsp; &emsp;创建用户 7.&emsp;stunnel 启动服务 8.&emsp;防火墙添加信任端口 iptables -A INPUT -m state –state NEW -mtcp -p tcp –dport 8888 -j ACCEPT iptables -A INPUT -m state –state NEW -m tcp-p tcp –dport 3128 -j ACCEPT /etc/init.d/iptables save service iptables restart 9.&emsp;chkconfigsquid on 开机自动启动 10.&emsp;vi /etc/rc.local 配置开机允许stunnel stunnel 11.&emsp;国内stunnelclient配置 yum –y install stunnnel scp –r root@1.1.1.1:/etc/stunnel/stunnel.pem/etc/stunnel拷贝国外主服务器生成的密钥文件 vi /etc/stunnel/stunnel.conf 编辑配置文件 cert= /etc/stunnel/stunnel.pemsocket= l:TCP_NODELAY=1socket= r:TCP_NODELAY=1verify= 2CAfile= /etc/stunnel/stunnel.pemclient=yescompression= zlibciphers= AES256-SHAdelay= nofailover= priosslVersion= SSLv3[sproxy]accept= 172.16.1.1:8080 用户代理的端口connect= 1.1.1.1:8888 国外服务器的IP及所监听的端口 12.&emsp;stunnel 启动stunnel 13.&emsp;防火墙添加信任端口 iptables-A INPUT -m state –state NEW -m tcp -p tcp –dport 8080 -j ACCEPT /etc/init.d/iptables save service iptables restart 14.&emsp;vi /etc/rc.local stunnel OK，所有配置完毕，可以在浏览器上挂代理了172.16.1.1:8080]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[华为S7706配置]]></title>
      <url>%2F2017%2F04%2F27%2F%E5%8D%8E%E4%B8%BAS7706%E9%85%8D%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[sysname Playcrab-Core &emsp; &emsp; &emsp; &emsp; &emsp;修改交换机默认名字 super password level 3 cipher XXX &emsp; &emsp; &emsp; &emsp; &emsp;增加交换机超级密码 vlan batch 10 20 30 40 50 52 60 70 72 76 &emsp; &emsp; &emsp; &emsp; &emsp;批量新建vlan undo telnet server enable &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; 关闭交换机telnet访问 observe-port 1 interface GigabitEthernet4/0/44 &emsp; &emsp; &emsp; &emsp;配置高速以太口4/0/44口为镜像口 undo http server enable &emsp; &emsp; &emsp; &emsp;关闭web页面访问交换机 radius-server template XXX &emsp; &emsp; &emsp;配置radius模版 radius-server shared-key cipher XXX &emsp; &emsp; &emsp;&emsp; 配置radius共享密钥 radius-server authentication 172.16.XX.XX 1812 &emsp; &emsp; &emsp;radius认证服务器地址及端口 radius-server retransmit 2 &emsp; &emsp; &emsp; 配置Radius实时记帐包发送间隔时间为2分钟 undo radius-server user-name domain-included radius &emsp; &emsp;认证不加域名 acl number 3000 &emsp; &emsp; &emsp; &emsp; &emsp;&emsp; 创建访问控制列表 description meeting &emsp; &emsp; &emsp; &emsp; 控制列表描述是会议 rule 1000 deny ip source 172.16.X.X &emsp;0.0.0.X destination 172.16.X.X &emsp; 0.0.X.X &emsp; &emsp; &emsp; &emsp; &emsp;拒绝源176.16.X.X，访问目标172.16.X.X 定义流策略traffic classifier c_meeting operator or precedence 5if-match acl 3000 定义流动作traffic behavior b_permit permit 引用流策略和流动作traffic policy p_meetingclassifier c_meeting behavior b_permit 访问控制列表在虚拟接口vlan76，进的方向策略生效vlan 76traffic-policy p_meeting inbound #创建dhcp中继服务组,并指定服务组的IP地址dhcp server group 1dhcp-server 172.16.X.X 0#dhcp server group 2dhcp-server 172.16.X.X 1 #aaa&emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; 开启AAA服务 authentication-scheme default&emsp; &emsp; &emsp; 默认使用本地认证 authentication-scheme XX.com&emsp; &emsp; &emsp; 配置aaa认证域模版 authentication-mode radius local&emsp; &emsp;&emsp; 配置使用radius认证 authorization-scheme default&emsp; &emsp; &emsp; 默认授权方式 accounting-scheme default &emsp; &emsp; &emsp; 默认计费方式 domain default&emsp; &emsp; &emsp; 默认域 domain XXX &emsp; &emsp; &emsp; 创建AAA默认域 authentication-scheme XXX.com&emsp; &emsp; &emsp; 应用认证域 radius-server XXX.com&emsp; &emsp; &emsp; &emsp; radius认证模版 local-user admin password cipher XXX&emsp; &emsp; &emsp; 配置admin密码 local-user admin service-type telnet terminal ssh web 8021x http&emsp; 授权admin用登陆方式#ntp-service unicast-server 172.16.X.X &emsp; &emsp; 指向时间同步服务器#interface Vlanif10 &emsp; &emsp; &emsp; &emsp; 进入vlan10虚拟接口 description to_chanpinfuwu&emsp; &emsp; &emsp; &emsp; 描述vlan10是产品服务 ip address 172.16.X.X 255.255.X.0&emsp; &emsp; &emsp; &emsp; 配置IP地址及其掩码 dhcp select relay&emsp; &emsp; &emsp; &emsp; 开启dhcp中继 dhcp relay server-select 1 &emsp; &emsp; &emsp; &emsp; dhcp中继指向中继组1 interface Eth-Trunk1 &emsp; &emsp; &emsp; &emsp; 创建聚合组Eth-Trunk1 description To Playcrab-FireWall&emsp; &emsp; &emsp; &emsp; 描述Eth-Trunk1连接Playcrab-FireWall port link-type trunk&emsp; &emsp; &emsp; &emsp; 端口链路类型为中继链路 port trunk pvid vlan 255&emsp; &emsp; &emsp; &emsp; 设置端口的默认vlan标签 undo port trunk allow-pass vlan 1&emsp; &emsp; &emsp; &emsp; 禁止vlan1通过中继链路端口 port trunk allow-pass vlan 255&emsp; &emsp; &emsp; &emsp; &emsp; &emsp; 允许vlan255通过中继链路端口 #interface GigabitEthernet4/0/47&emsp; &emsp; &emsp; &emsp; &emsp; &emsp;进入高速以太口 description To Playcrab-FrieWall-G0/0/1&emsp; &emsp; &emsp; &emsp; &emsp; 描述连接防火墙的G0/0/1口 eth-trunk 1 &emsp; &emsp; &emsp; &emsp; 加入聚合组1 ip route-static 0.0.0.0 0.0.0.0 172.16.X.X&emsp; &emsp; &emsp; &emsp; 配置默认路由 #snmp-agent&emsp; &emsp; &emsp; &emsp;开启交换机snmp服务 snmp-agent community read cipher XXX &emsp; &emsp; &emsp; &emsp; 配置snmp的团体名为XXX snmp-agent sys-info version all&emsp; &emsp; &emsp; &emsp; 设置系统启用的snmp的版本号#ssh authentication-type default password&emsp; &emsp; &emsp; &emsp; SSH认证类型，默认密码认证 #user-interface con 0&emsp; &emsp; &emsp; &emsp; 进入交换机console口 authentication-mode password&emsp; &emsp; &emsp; &emsp; 密码认证模式 set authentication password cipher XXX&emsp; &emsp; &emsp; &emsp;设置密码XXX为密文#user-interface vty 0 4 &emsp; &emsp; &emsp; &emsp; 创建vty虚拟终端 authentication-mode aaa &emsp; &emsp; &emsp; &emsp; 认证模式为AAA protocol inbound ssh &emsp; &emsp; &emsp; &emsp; 接入类型使用ssh]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[编译安装LAMP]]></title>
      <url>%2F2017%2F03%2F31%2F%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85LAMP%2F</url>
      <content type="text"><![CDATA[目前的web服务器多是用LAMP来搭建的。所谓的LAMP，指的是几款开源软件的组合构成的动态web网站系统。 L=Linux A=Apache M=Mysql P=PHP/Perl/Python。 我们主要来说一下编译安装： 1.安装apache 先下载好相关的源码包：这里下载的是httpd-2.2.21.tar 新建一个文件夹，取名software ：mkdir /root/software 把下载的httpd-2.2.21.tar放在该目录下 注意，检查一下GCC开发工具]在安装软件之前要确保GCC等开发工具都已经安装妥当。 再检查httpd是否已经停用，因为系统会安装自带的Apache，不管你是否选择安装它。 一切ok，开始安装。 [解压源代码] [进入源码目录] [编译配置] ./configure –prefix=/usr/local/apache –enable-so –enable-rewrite [编译并安装] [启动Apache] [测试是否正常] 添加开机自动启动httpd服务 cp /usr/local/apache/bin/apachectl /etc/rc.d/init.d/httpd chkconfig –add httpd vim /etc/rc.d/init.d/httpd 添加上#chkconfig:345 85 15#description: Start and stops the Apache HTTP Server 然后 chmod +x /etc/rc.d/init.d/httpd chkconfig –add httpd 然后可以用setup命令进入服务设置，设置为开机启动 2.安装mysql 首先确保系统中没有安装过mysql 下载源码包到/root/software/目录下 mysql-5.1.55.tar.gz [创建MySQL使用的系统用户与组] useradd –M –s /sbin/nologin mysql #添加mysql这个用户,同时添加到mysql组里，不给登陆shell [解压源代码] [进入源码目录] [编译并安装] checking for termcap functions library… configure: error: No curses/termcap library found [root@localhost mysql-5.1.55]# make make: * 没有指明目标并且找不到 makefile。 停止。 如果报这个错误，说明没有安装ncurses这个包 拷贝my-medium.cnf文件到/etc/目录下并重命名为my.cnf 修改字符集 [client] default-character-set=utf8 [mysqld] 重启mysql 查看字符集设置 [初始化数据及调整权属] [注册MySQL数据库程序库路径] 可以暂时不设置 echo “/usr/local/mysql/lib/mysql” &gt;&gt; /etc/ld.so.conf 注：其它的一些应用程序在使用MySQL数据库的时候，需要用到MySQL提供接口程序库；因此要把这个程序库的有效路径注册到Linux中，以便其它应用程序能够找到。 [启动MySQL并设置数据库管理员密码] 变量，这样可以不用进入到mysql的安装目录下进行mysql操作或者做个软连接： ln -s /usr/local/mysql/bin/mysql /usr/bin/mysql 添加mysql开机自动启动 cp /root/soft/mysql-5.1.55/support-files/mysql.server /etc/init.d/mysqld cd /etc/init.d/ chkconfig –add mysqld chkconfig mysqld on [登录数据库测试] 测试成功 3.安装PHP 1、检查各种库源文件 如果发现没有相应的库，我们需要下载一个编译安装。 例如：jpegsrc 这个库。我们下载的是jpegsrc.v8b.tar.gz包。安装后进入到该目录： –enable-shared 参数必须家，意思是创建共享库。 然后编译安装 注：GD库，是图形图像处理扩展库，提供了处理图片的API，有了它PHP才能正确处理GIF、JPEG、PNG等图形图像格式。如下： [解压源码包] [编译前配置] [编译并安装] [复制php.ini配置文件] [修改Apache主配置文件httpd.conf]添加支持PHP环境的相关配置。 [进行测试] 在/usr/local/apache/htdocs 目录下创建一个index.php文件 编辑index.php文件 保存退出。重启apache服务/usr/local/apache/bin/apachectl -k restart 打开浏览器看是否支持php 如果弹出的是下载该项，重启一下服务器 弹出该画面，说明php安装编译成功。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[华为S5700配置SSH和Raidus]]></title>
      <url>%2F2017%2F03%2F28%2F%E5%8D%8E%E4%B8%BAS5700%E9%85%8D%E7%BD%AESSH%E5%92%8CRaidus%2F</url>
      <content type="text"><![CDATA[clock timezone beijing add 8 &emsp; &emsp; 配置交换机时区 sys undo cluster enable rsa local-key-pair create &emsp; &emsp; 创建交换机密钥 y 1024 &emsp; &emsp; 密钥长度默认512 sysname C02 &emsp; &emsp; 修改交换机名 vlan batch 10 20 30 40 50 60 70 72 76 78 &emsp; &emsp; 批量创建vlan vlan batch 80 84 90 100 110 255 interface vlan 255 &emsp; &emsp; 创建并进入vlan 虚拟接口 ip add 172.16.xx.xx 24 &emsp; &emsp; 配置ip地址 quit &emsp; &emsp; 退出当前视图 radius-server template xx.com &emsp; &emsp; 配置radius模版 radius-server authentication 172.16.xx.xx 1812&emsp; &emsp; &emsp; radius认证服务器地址及端口 radius-server shared-key cipher xx &emsp; &emsp; radius共享密钥 radius-server retransmit 2 undo radius-server user-name domain-included &emsp; &emsp; raius认证不加域名 quit aaa &emsp; &emsp; 配置aaa模版 authentication-scheme xx.com &emsp; &emsp; 配置aaa认证域模版 authentication-mode radius local &emsp; &emsp; 配置使用radius认证 quit domain xx.com &emsp; &emsp; 创建aaa认证域 authentication-scheme xx.com &emsp; &emsp; 应用认证域 radius-server xx.com &emsp; &emsp; 应用radius认证模版 quit local-user admin password cipher xxxx &emsp; &emsp; 配置admin密码 local-user admin service-type ssh telnet &emsp; &emsp; 授权admin用户登录方式 quit user-interface vty 0 4 &emsp; &emsp; 创建vty虚拟终端 authentication-mode aaa &emsp; &emsp; 使用aaa认证方式 protocol inbound ssh &emsp; &emsp; 接入类型使用ssh undo user privilege level &emsp; &emsp; 取消本地用户等级授权 undo set authentication password quit stelnet server enable &emsp; &emsp; 开启ssh服务 ssh authentication-type default password &emsp; &emsp; ssh使用密码认证 ip route-static 0.0.0.0 0.0.0.0 172.16.xx.xx &emsp; &emsp; 配置默认路由 snmp-agent &emsp; &emsp; 开启snmp snmp-agent sys-info version all &emsp; &emsp; snmp兼容多版本 snmp-agent community read cipher xxxx &emsp; &emsp; 输入snmp团体名称 info-center loghost 172.16.xx.xx facility local5 &emsp; &emsp; 指向syslog日志服务器 user-interface console 0 &emsp; &emsp; 进入console接口 authentication-mode password &emsp; &emsp; 使用本地密码认证 set authentication password cipher xxxx &emsp; &emsp; 设置密码为密文 quit super password cipher xxxx &emsp; &emsp; 设置超级密码认证 undo mac-authen timer reauthenticate-period interface Vlanif1 &emsp; &emsp; 进入vlan1虚拟接口 shutdown &emsp; &emsp; 停用vlan 1接口 undo ip address dhcp-alloc &emsp; &emsp; 停用dhcp quit undo telnet server enable &emsp; &emsp; 停用telnet服务 y lldp en &emsp; &emsp; 开启链路发现协议 dhcp en &emsp; &emsp; 启用dhcp服务 dhcp snooping enable &emsp; &emsp; 启用dhcp窥探 interface Eth-Trunk1 &emsp; &emsp; 创建聚合端口1 port link-type trunk &emsp; &emsp; 配置端口类型为trunk port trunk pvid vlan 255 &emsp; &emsp; 将trunk打标记为255 port trunk allow-pass vlan all &emsp; &emsp; 放行所有vlan通过 undo port trunk allow-pass vlan 1 &emsp; &emsp; 禁止vlan 1通过 dhcp snooping trusted &emsp; &emsp; 信任dhcp窥探 quit port-group 1 &emsp; &emsp; 创建端口组 group-member GigabitEthernet 0/0/1 to GigabitEthernet 0/0/24&emsp; &emsp; 将1到24端口加入该组 shutdown &emsp; &emsp; 关闭该组下所有端口 port link-type acces &emsp; &emsp; 配置端口类型为access ntdp enable &emsp; &emsp;开启邻居拓扑发现协议 ndp enable &emsp; &emsp; 开启发现直连设备信息协议 bpdu enable &emsp; &emsp; 开启BPDU桥协议数据单元，防止环路产生，一般配合stp使用 loopback-detect enable &emsp; &emsp; 开启环路检测协议 loopback-detect action shutdown &emsp; &emsp; 发现环路进行关闭端口操作 dhcp snooping enable &emsp; &emsp; 开启dhcp窥探功能 ip source check user-bind enable &emsp;&emsp;将dhcp窥探信息进行绑定 br 40 &emsp; &emsp; 限制广播数据包为40%完整命令（broadcast-suppression） port de v 10 &emsp; &emsp; 配置端口所属vlan un sh &emsp; &emsp; 启用端口 quit undo port-group 1 &emsp; &emsp; 删除端口组 interface GigabitEthernet 0/1/1 &emsp; &emsp; 进入光端口 e 1 &emsp; &emsp; 加入到聚合端口Eth-Trunk1 interface GigabitEthernet 0/1/2 e 1 quit quit sa &emsp; &emsp; &emsp; 保存配置 y]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Extmail]]></title>
      <url>%2F2017%2F03%2F26%2FExtmail%2F</url>
      <content type="text"><![CDATA[一、系统环境 （1）编译环境 &emsp;&emsp;[root@web_mail]# yum install gcc gcc-c++ （2）依赖软件 &emsp;&emsp;[root@web_mail]# yum install openssl openssl-devel cyrus-sasl libtool-ltdl libtool-ltdl-devel db4 db4-devel expect expect-devel pcre pcre-devel （3）LAMP环境 &emsp;&emsp;[root@web_mail]# yum install httpd httpd-devel mysql mysql-server mysql-devel php php-mysql （4）设置mysql，apache开机启动 &emsp;&emsp;[root@web_mail ~]# chkconfig mysqld on &emsp;&emsp;[root@web_mail ~]# chkconfig httpd on 二、安装POSTFIX （1）安装 &emsp;&emsp;[root@web_mail ~]# yum install postfix （2）配置 &emsp;&emsp;[root@web_mail ~]# cd /etc/postfix/ &emsp;&emsp;[root@web_mail postfix]# postconf -n &gt; /etc/postfix/main2.cf &emsp;&emsp;[root@web_mail postfix]# mv main.cf main.cf.old &emsp;&emsp;[root@web_mail postfix]# mv main2.cf main.cf &emsp;&emsp;[root@web_mail postfix]# vi main.cf #inet_interfaces = localhost 注释掉下面这行，否则25端口只能本地连接#添加以下基本配置mynetworks = 127.0.0.1 myhostname = mail.xxx.com 主机设置 mydestination = $myhostname, localhost.$mydomain, localhost mail_name = Postfix - by playdod.com smtpd_banner = $myhostname ESMTP $mail_namesmtpd_error_sleep_time = 0smessage_size_limit = 10485760 邮件大小10Mmailbox_size_limit = 2097152000 邮箱大小2Gshow_user_unknown_table_name = no bounce_queue_lifetime = 1dmaximal_queue_lifetime = 1d （3）启动 &emsp;&emsp;[root@web_mail postfix]# service postfix start &emsp;&emsp;[root@web_mail postfix]# chkconfig postfix on &emsp;&emsp;[root@web_mail postfix]# ps aux|grep postfix &emsp;&emsp;[root@web_mail postfix]# netstat -tlnp|grep 25 （4）检查 &emsp;&emsp;[root@web_mail postfix]# postfix check &emsp;&emsp;[root@web_mail postfix]# postconf –a &emsp;&emsp;出现cyrus表示可以支持cyrus认证用户 &emsp;&emsp;[root@web_mail postfix]# postconf -m &emsp;&emsp;出现mysql表示可以支持mysql存储账号 三、安装Courier-Authlib （1）安装 &emsp;&emsp;[root@web_mail postfix]# groupadd vmail -g 1002 &emsp;&emsp;[root@web_mail postfix]# useradd vmail -u 1002 -g 1002 -d /home/domains &emsp;&emsp;[root@web_mail postfix]# cd /usr/local/src &emsp;&emsp;[root@web_mail src]#wget http://cznic.dl.sourceforge.net/project/courier/authlib/0.66.1/courier-authlib-0.66.1.tar.bz2 &emsp;&emsp;[root@web_mail src]# tar -jxf courier-authlib-0.66.1.tar.bz2 &emsp;&emsp;[root@web_mail src]# cd courier-authlib-0.66.1 &emsp;&emsp;[root@web_mail courier-authlib-0.66.1]# ./configure –with-mysql-libs –with-mysql-includes &emsp;&emsp;–with-authmysql –with-authmysql=yes –with-mailuser=vmail –with-mailgroup=vmail &emsp;&emsp;[root@web_mail courier-authlib-0.66.1]# make &amp;&amp; make install &emsp;&emsp;[root@web_mail courier-authlib-0.66.1]# make install-configure （2）修改配置文件 &emsp;&emsp;[root@web_mail courier-authlib-0.66.1]# cd /usr/local/etc/authlib &emsp;&emsp;[root@web_mail authlib]# vi authmysqlrc MYSQL_SERVER localhostMYSQL_USERNAME extmailMYSQL_PASSWORD extmailMYSQL_SOCKET /var/lib/mysql/mysql.sockMYSQL_PORT 3306MYSQL_OPT 0MYSQL_DATABASE extmailMYSQL_USER_TABLE mailboxMYSQL_CRYPT_PWFIELD passwordMYSQL_UID_FIELD 1002MYSQL_GID_FIELD 1002MYSQL_LOGIN_FIELD usernameMYSQL_HOME_FIELD homedirMYSQL_NAME_FIELD nameMYSQL_MAILDIR_FIELD maildirMYSQL_QUOTA_FIELD quotaMYSQL_SELECT_CLAUSE SELECT username,password,&quot;&quot;,uidnumber,gidnumber,\ CONCAT(&apos;/home/domains/&apos;,homedir), \ CONCAT(&apos;/home/domains/&apos;,maildir), \ quota, \ name \ FROM mailbox \ WHERE username = &apos;$(local_part)@$(domain)&apos; &emsp;&emsp;[root@web_mail authlib]# vi authdaemonrcauthmodulelist=&quot;authmysql&quot;authmodulelistorig=&quot;authmysql&quot; &emsp;&emsp;[root@web_mail authlib]# ln -s /usr/local/etc/authlib /etc/authlib （3）启动 &emsp;&emsp;[root@web_mail authlib]# /usr/local/sbin/authdaemond start &emsp;&emsp;[root@web_mail authlib]# ps aux|grep authdaemond &emsp;&emsp;[root@web_mail authlib]# echo “/usr/local/sbin/authdaemond start” &gt;&gt; /etc/rc.d/rc.local 四、安装Maildrop （1） 安装Courier-Unicode &emsp;&emsp;[root@web_mail authlib]# cd /usr/local/src &emsp;&emsp;[root@web_mail src]# tar -jxf courier-unicode-1.1.tar.bz2 &emsp;&emsp;[root@web_mail src]# cd courier-unicode-1.1 &emsp;&emsp;[root@web_mail courier-unicode-1.1]# ./configure &emsp;&emsp;[root@web_mail courier-unicode-1.1]# make &amp;&amp; make install （2） 安装Maildrop &emsp;&emsp;[root@web_mail courier-unicode-1.1]# cd /usr/local/src &emsp;&emsp;[root@web_mail src]# tar -jxf maildrop-2.7.2.tar.bz2 &emsp;&emsp;[root@web_mail src]# cd maildrop-2.7.2 &emsp;&emsp;[root@web_mail maildrop-2.7.2]# ./configure–enable-maildirquota –enable-maildrop-uid=1002 –enable-maildrop-gid=1002 –with-trashquota &emsp;&emsp;[root@web_mail maildrop-2.7.2]# make &amp;&amp; make install （3） 配置 &emsp;&emsp;[root@web_mail maildrop-2.7.2]# vi /etc/postfix/master.cf maildrop unix - n n - - pipe flags=DRhu user=vmail argv=/usr/local/bin/maildrop -w 90 -d $&#123;user&#125;@$&#123;nexthop&#125; $&#123;recipient&#125; $&#123;user&#125; $&#123;extension&#125; &#123;nexthop&#125; [root@web_mail maildrop-2.7.2]# vi /etc/postfix/main.cf maildrop_destination_recipient_limit = 1 五、安装Webmail前台 （1）安装 &emsp;&emsp;[root@web_mail src]# tar -zxvf extmail-1.2.tar.gz &emsp;&emsp;[root@web_mail src]# tar -zxvf extman-1.1.tar.gz &emsp;&emsp;[root@web_mail src]# mkdir /var/www/extsuite &emsp;&emsp;[root@web_mail src]# mv extman-1.1 /var/www/extsuite/extman &emsp;&emsp;[root@web_mail src]# mv extmail-1.2 /var/www/extsuite/extmail （2）配置extmail &emsp;&emsp;[root@web_mail src]# cd /var/www/extsuite &emsp;&emsp;[root@web_mail extsuite]# cp extmail/webmail.cf.default extmail/webmail.cf &emsp;&emsp;[root@web_mail extsuite]# vi extmail/webmail.cf SYS_MYSQL_USER = extmailSYS_MYSQL_PASS = extmail （3）配置extman &emsp;&emsp;[root@web_mail extsuite]# mkdir /var/www/extsuite/extman/session &emsp;&emsp;[root@web_mail extsuite]# cp extman/webman.cf.default extman/webman.cf &emsp;&emsp;[root@web_mail extsuite]# vi extman/webman.cf SYS_SESS_DIR = /var/www/extsuite/extman/session/SYS_DEFAULT_UID = 1002SYS_DEFAULT_GID = 1002 （4）初始化数据库 [1] 给数据库root用户设置密码 &emsp;&emsp;[root@web_mail extsuite]# service mysqld restart &emsp;&emsp;[root@web_mail extsuite]# mysql –uroot &emsp;&emsp;mysql&gt; set password for root@localhost=password(‘123456’); &emsp;&emsp;mysql&gt; quit [2] 导入extmail数据库 &emsp;&emsp;[root@web_mail extsuite]# mysql -uroot -p123456 &lt; extman/docs/extmail.sql [3] 修改参数后导入数据 &emsp;&emsp;[root@web_mail extsuite]#sed –i ‘s/extmail.org/playdod.com/g’ extman/docs/init.sql &emsp;&emsp;[root@web_mail extsuite]# sed -i ‘s/1000/1002/g’ extman/docs/init.sql &emsp;&emsp;[root@web_mail extsuite]# mysql -uroot -p123456 &lt;/var/www/extsuite/extman/docs/init.sql [4] 查看数据库 &emsp;&emsp;[root@web_mail extsuite]# mysql -uroot -p123456 &emsp;&emsp;mysql&gt; use extmail; &emsp;&emsp;&gt; show tables; &emsp;&emsp;mysql&gt; select username,uidnumber,gidnumber from mailbox; （5）配置postfix &emsp;&emsp;[root@webmail extsuite]# cp extman/docs/mysql*.cf /etc/postfix/ &emsp;&emsp;[root@web_mail extsuite]# vi /etc/postfix/main.cf virtual_alias_maps = mysql:/etc/postfix/mysql_virtual_alias_maps.cfvirtual_mailbox_domains = mysql:/etc/postfix/mysql_virtual_domains_maps.cfvirtual_mailbox_maps = mysql:/etc/postfix/mysql_virtual_mailbox_maps.cfvirtual_transport = maildropvirtual_uid_maps = static:1002virtual_gid_maps = static:1002 （6）设置权限和属主 &emsp;&emsp;[root@web_mail extsuite]# chown root.root -R extmail extman &emsp;&emsp;[root@web_mail extsuite]# chown -R vmail:vmail extmail/cgi/ extman/cgi/ extman/session （7）配置Apache虚拟主机 &emsp;&emsp;[root@web_mail extsuite]# vi /etc/httpd/conf.d/extmail.conf # VirtualHost for ExtMail SolutionNameVirtualHost *:80&lt;VirtualHost *:80&gt;ServerName mail.xx.com DocumentRoot /var/www/extsuite/extmail/html/ ScriptAlias /extmail/cgi/ /var/www/extsuite/extmail/cgi/Alias /extmail /var/www/extsuite/extmail/html/ScriptAlias /extman/cgi/ /var/www/extsuite/extman/cgi/Alias /extman /var/www/extsuite/extman/html/# Suexec configSuexecUserGroup vmail vmail&lt;/VirtualHost&gt; （8）重启服务 &emsp;&emsp;[root@web_mail extsuite]# service postfix restart &emsp;&emsp;[root@web_mail extsuite]# service httpd restart （9）建立Maildir [1] 手动建立Maildir 用于存放用户邮件的目录；在WEB上创建其他域名邮箱，会在此自动建立相应域名目录。 &emsp;&emsp;[root@web_mail extsuite]# cd extman/tools &emsp;&emsp;[root@web_mail tools]# ./maildirmake.pl /home/domains/playdod.com/postmaster/Maildir &emsp;&emsp;[root@web_mail tools]# chown -R vmail:vmail /home/domains [2]测试authlib认证登录账号 &emsp;&emsp;[root@web_mail tools]# /usr/local/sbin/authtest -s login postmaster@playdod.com extmail （10）安装其他依赖包 [1]安装绘图工具 &emsp;&emsp;[root@web_mail tools]# yum install -y rrdtool rrdtool-perl [2]安装依赖perl模块 &emsp;&emsp;[root@web_mail tools]# yum install -y cpan perl &emsp;&emsp;[root@web_mail tools]# yum install -y perl-YAML perl-Test-Exceptionperl-Crypt-PasswdMD5 perl-GD perl-CGI perl-Time-HiRes &emsp;&emsp;[root@web_mail tools]# perl -MCPAN -e ‘install Time::HiRes::Value’ &emsp;&emsp;[root@web_mail tools]# perl -MCPAN -e ‘install File::Tail’ &emsp;&emsp;[root@web_mail tools]# perl -MCPAN -e ‘install Unix::Syslog’ &emsp;&emsp;[root@web_mail tools]# perl -MCPAN -e ‘install DB_File’ &emsp;&emsp;[root@web_mail tools]# perl -MCPAN -e ‘install Encode::HanExtra’ [3]启动进程 &emsp;&emsp;[root@web_mail tools]# cd /var/www/extsuite/extman &emsp;&emsp;[root@web_mail extman]# cp -R addon/mailgraph_ext/ /usr/local/ &emsp;&emsp;[root@web_mail extman]# /usr/local/mailgraph_ext/mailgraph-init start &emsp;&emsp; &emsp;&emsp;[root@web_mail extman]# ps aux|grep mailgraph_ext &emsp;&emsp; &emsp;&emsp;[root@web_mail extman]# /var/www/extsuite/extman/daemon/cmdserver -v -d &emsp;&emsp;[root@web_mail extman]# ps aux|grep cmdserver &emsp;&emsp; &emsp;&emsp;[root@web_mail extman]#echo “/usr/local/mailgraph_ext/mailgraph-init start” &gt;&gt; /etc/rc.d/rc.local [root@web_mail extman]# echo “/var/www/extsuite/extman/daemon/cmdserver-v -d” &gt;&gt; /etc/rc.d/rc.local [4]定时任务 &emsp;&emsp;[root@web_mail extman]# crontab -e 0 4 * * * /var/www/extsuite/extman/tools/expireusers.pl -all postmaster@playdod.com30 4 * * * /var/www/extsuite/extman/tools/reportusage.pl -all /home/domains postmaster@playdod.com &emsp;&emsp;[root@web_mail extman]# service crond restart &emsp;&emsp;[root@web_mail extsuite]# vi /var/www/extsuite/extman/webman.cf &emsp;&emsp;取消管理后台登陆验证码 SYS_CAPTCHA_ON = 0 (11)测试web访问 [1]访问邮箱 帐号:postmaster 密码:extmail 域名:xxx.com [2]访问邮箱后台 帐号: root@xx.com 密码: xxxx* （12）检查Maildrop [1]查看版本信息 &emsp;&emsp;[root@web_mail extsuite]# maildrop –v &emsp;&emsp; [2]测试maildrop连接 &emsp;&emsp;[root@web_mail extsuite]# echo “test” | maildrop -V 10 -d postmaster@playdod.com &emsp;&emsp; 六、安装Cyrus-SASL使Postfix支持SMTP认证 （1）系统已默认安装Cyrus-SASL &emsp;&emsp;[root@mail ~]# rpm -aq|grep cyrus-sasl &emsp;&emsp; （2）配置cyrus-sasl vi /etc/sasl2/smtpd.conf &emsp;&emsp; &emsp;&emsp;[root@web_mail ~]# chmod 755 /usr/local/var/spool/authdaemon （3）配置postfix &emsp;&emsp;[root@web_mail ~]# vi /etc/postfix/main.cf &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;[root@web_mail ~]# service postfix restart （4）测试SMTP认证 &emsp;&emsp;[root@web_mail ~]# perl -e ‘use MIME::Base64; print encode_base64 (“postmaster\@playdod.com”)’ &emsp;&emsp;[root@web_mail ~]# perl -e ‘use MIME::Base64; print encode_base64(“extmail”)’ &emsp;&emsp;[root@web_mail ~]# yum install -y telnet &emsp;&emsp;[root@web_mail ~]# telnet localhost 25 Connected to localhost.Escape character is &apos;^]&apos;.220 mail.playdod.com ESMTP Postfix - by playdod.comehlo localhost250-mail.playdod.com250-PIPELINING250-SIZE 10485760250-VRFY250-ETRN250-STARTTLS250-AUTH LOGIN PLAIN250-AUTH=LOGIN PLAIN250-ENHANCEDSTATUSCODES250-8BITMIME250 DSN auth login334 VXNlcm5hbWU6cG9zdG1hc3RlckBwbGF5ZG9kLmNvbQ==334 UGFzc3dvcmQ6YWJjZC4xMjM0235 2.7.0 Authentication successful quit221 2.0.0 ByeConnection closed by foreign host. 七、实现POP3、IMAP基本功能 （1）安装Courier-IMAP &emsp;&emsp;[root@web_mail ~]# cd /usr/local/src &emsp;&emsp;[root@web_mail ~]#=wget http://ncu.dl.sourceforge.net/project/courier/imap/4.15.1/courier-imap-4.15.1.tar.bz2 &emsp;&emsp;[root@web_mail src]# tar -jxf courier-imap-4.15.1.tar.bz2 &emsp;&emsp;[root@web_mail src]# cd courier-imap-4.15.1 &emsp;&emsp;[root@web_mail courier-imap-4.15.1]# ./configure –enable-workarounds-for-imap-client-bugs –with-authchangepwdir –enable-unicode –with-trashquota –disable-root-check &emsp;&emsp;[root@web_mail courier-imap-4.15.1]# make &amp;&amp; make install &emsp;&emsp;[root@web_mail courier-imap-4.15.1]# make install-configure （2）启动程序 &emsp;&emsp;[root@web_mail courier-imap-4.15.1]# cd /usr/lib/courier-imap/ &emsp;&emsp;[root@web_mail courier-imap]# /usr/lib/courier-imap/libexec/imapd.rc start &emsp;&emsp;[root@web_mail courier-imap]# echo “/usr/lib/courier-imap/libexec/imapd.rcstart” &gt;&gt; /etc/rc.local &emsp;&emsp;[root@web_mail courier-imap]# ps aux|grep imapd &emsp;&emsp; &emsp;&emsp;[root@web_mail courier-imap]# netstat -tnlp|grep 143 &emsp;&emsp; &emsp;&emsp;[root@web_mail courier-imap]# /usr/lib/courier-imap/libexec/pop3d.rc start &emsp;&emsp;[root@web_mail courier-imap]# echo “/usr/lib/courier-imap/libexec/pop3d.rcstart” &gt;&gt; /etc/rc.local &emsp;&emsp;[root@web_mail courier-imap]# ps aux|grep pop3d &emsp;&emsp; &emsp;&emsp;[root@web_mail courier-imap]# netstat -tnlp|grep 110 &emsp;&emsp; （3）设置imapd、pop3为启用状态 &emsp;&emsp;[root@web_mail courier-imap]# sed -i ‘s/IMAPDSTART=NO/IMAPDSTART=YES/g’ etc/imapd &emsp;&emsp;[root@web_mail courier-imap]# sed -i ‘s/POP3DSTART=NO/POP3DSTART=YES/g’ etc/pop3d （4）测试端口连接 &emsp;&emsp;[root@web_mail courier-imap]# telnet localhost 110 Connected to localhost.Escape character is &apos;^]&apos;.+OK Hello there.user postmaster@playdod.com +OK Password required.pass abcd.1234+OK logged in.list+OK POP3 clients that break here, they violate STD531 6652 6653 8714 32455 6956 3297quit+OK Bye-bye.Connection closed by foreign host &emsp;&emsp;[root@web_mail courier-imap]# telnet localhost 143 Connected to localhost.Escape character is &apos;^]&apos;.* OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE ACL ACL2=UNION STARTTLS] Courier-IMAP ready. Copyright 1998-2011 Double Precision, Inc. See COPYING for distribution information.tag login postmaster@playdod.com abcd.1234tag OK LOGIN Ok.tag logout* BYE Courier-IMAP server shutting downtag OK LOGOUT completedConnection closed by foreign host. 八、Webmail支持FCGI （1）装apache的mod_fastcgi模块 &emsp;&emsp;[root@web_mail ~]# yum install -y httpd-devel &emsp;&emsp;[root@web_mail ~]# cd /usr/local/src &emsp;&emsp;[root@web_mail src]# wget http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz &emsp;&emsp;[root@web_mail src]# tar zxvf mod_fastcgi-2.4.6.tar.gz &emsp;&emsp;[root@web_mail src]# cd mod_fastcgi-2.4.6 &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# cp Makefile.AP2 Makefile &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# find / -name “build” -type d &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# make top_dir=/usr/lib64/httpd/ install （2）查看模块是否生成 &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# ls /etc/httpd/modules/mod_fastcgi.so （3）安装Extmail需要的perl-FCGI模块 &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# yum install perl-FCGI &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# vi /etc/httpd/conf.d/extmail.conf （4）配置虚拟主机文件 &emsp;&emsp;/Users/yx/blog/source/F6F44294-9C5F-40E1-B9C6-FB25DA663BB4.png （5）修改启动脚本，并启动 &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# vi /var/www/extsuite/extmail/dispatch-initSU_UID=vmail SU_GID=vmail &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# /var/www/extsuite/extmail/dispatch-init start &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# echo “/var/www/extsuite/extmail/dispatch-init start” &gt;&gt; /etc/rc.d/rc.local &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# service httpd restart &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# ps aux|grep dispatch.fcgi &emsp;&emsp; &emsp;&emsp;[root@web_mail mod_fastcgi-2.4.6]# netstat -tnlp|grep 8888 &emsp;&emsp;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[人类与环境]]></title>
      <url>%2F2017%2F03%2F23%2Frenleiyuhuanjing%2F</url>
      <content type="text"><![CDATA[1.人与动物 2.人与植物 3.人与空气 4.人类的进步与保护环境 5.自我救赎 6.世界末日 &emsp;&emsp;&emsp;这是一个看似很大的标题，却是和每一个人都息息相关，人类经过了上亿年的进化终于站到了食物链的顶端，如果恐龙还生活至今的话，菜单上应该少不了红烧霸王龙，清蒸剑齿龙，人类自从什么都可以放在盘中之后，动物们也面临着多了这么一位最厉害的天敌，从最开始的果腹，到现在已经是为了满足人类的贪欲，为此濒临灭绝的物种越来越多，即使是人类只需要它们的胆汁，鱼鳍，。。。。。。人类的手段也是残忍至极。人类和动物都共同生活在这个地球上，这个星球不光是人类的也是动物的，它们同样拥有生存的权利。 &emsp;&emsp;&emsp;现在是春暖花开的季节，不管是步行还是坐车，沿途都会看到已经盛开的迎春花，桃花和梅花，还有那片曾经被白雪覆盖的土地上窜出的一颗颗的绿油油的小草，都象征着春天，象征的生命，如果有什么烦心的事情，看到了这些，心情总会有一丝愉悦，给人带来好的心情，不然怎么亲人之间要送鲜花，爱人之间要送鲜花呢？现在人们的生活水平提高，很多精神追求也在不断翻新，但是不变的，是在家里的阳台上，种上几盆绿植，早上起来浇浇水，在忙碌的一天过后，窝在沙发上，沏上一壶清茶，欣赏着屋里这一抹绿色，小环境是如此，大环境当然也是这样就才是再好不过了，处处是鸟语花香，小鸟可以在树上筑巢，而不是高高的电线杆和高压电塔，道路两旁可以有一排排的大树，清风徐来的时候闻到的是阵阵花香，草香，人类需要这些绿色，需要这些植物，正如同需要吃饭穿衣一样。 &emsp;&emsp;&emsp;各种植物都需要空气和水来进行光合作用，才能生长，才能生存，蓝天白云是空气的基础，记得在若干年前有一个广而告之，场景是在幼儿园中，一群小朋友在画画，但是每一幅画都是黑黑的灰灰的，图里没有任何植物和动物，只有一个个冒着浓烟的工厂烟囱，天空一片灰色，“不要让我们的孩子，看不到蓝天”大概类似的广告语，现在看看，这应该是印证了另一个广告的话，广告也有真实的，“不看广告，看疗效”果然没有骗我们，一年365天，蓝天屈指可数，剩下的都是灰蒙蒙的雾霾，相继而来的是种种连医生都没有见过的疾病，人们束手无策，雾霾最重的时候，“遛狗不见狗，狗绳提在手，见绳不见手，狗叫我才走”，还有网友在朋友圈发了照片，大家都认为是恐怖片《寂静岭》的时候，朋友说这是北京的早晨。 &emsp;&emsp;&emsp;人与动物、植物，空气，都是大环境中的一部分，环境保护也不是新话题，随着人类不断的进步，不可避免的在破坏环境，但这并不是无法挽救的，环境并不是人类发展进步必须的牺牲品，环境的破坏，地震、火山爆发、洪水、旱灾、龙卷风、台风，是地球的呐喊和哭泣，我们就是许多年前的广而告之中的孩子，现在我们长大了，让我们从我做起，大家都参与到保护环境中来，保护环境，保护动物，保护植物，就是保护我们自己，人类越是进步，越应该重视环境，无环境，不人类。 &emsp;&emsp;&emsp;不要让我们的孩子连蓝天的样子都没有见过，只能在网络上搜寻，还地球一个干净的蓝天，清新的空气，生态平衡的大自然，才是人类发展的最终目标。 &emsp;&emsp;&emsp;不要真等到世界末日那一天，才去后悔，为什么买不起诺亚方舟的船票，其实不是物质的贫穷，而是精神的贫穷。大自然的和谐，生态平衡，何须那张船票。世界之大，我们如此渺小，但也可以伟大，全都看我们是如何去做。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F03%2F20%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new "My New Post" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
